// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Telegram Bot
export const TELEGRAM_CONFIG = {
    // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç—å —É @BotFather)
    BOT_TOKEN: 'YOUR_BOT_TOKEN',
    
    // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à chat ID (–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —É @userinfobot)
    CHAT_ID: 'YOUR_CHAT_ID',
    
    // URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    API_URL: 'https://api.telegram.org/bot'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
export const sendTelegramMessage = async (data: {
    name: string;
    email: string;
    company: string;
    theme: string;
    message: string;
}) => {
    const { BOT_TOKEN, CHAT_ID, API_URL } = TELEGRAM_CONFIG;
    
    const formattedMessage = `
üìß <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞</b>

üë§ <b>–ò–º—è:</b> ${data.name}
üìß <b>Email:</b> ${data.email}
üè¢ <b>–ö–æ–º–ø–∞–Ω–∏—è:</b> ${data.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
üìã <b>–¢–µ–º–∞:</b> ${data.theme}
üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
${data.message}

‚è∞ <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU')}
    `;

    try {
        const response = await fetch(`${API_URL}${BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: CHAT_ID,
                text: formattedMessage,
                parse_mode: 'HTML'
            }),
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const result = await response.json();
        return result.ok;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
        throw error;
    }
};
